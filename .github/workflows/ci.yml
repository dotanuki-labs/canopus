# Copyright 2025 Dotanuki Labs
# SPDX-License-Identifier: MIT

name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  docs-lint:
    runs-on: warp-ubuntu-2404-x64-2x # ubuntu-24.04
    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Check typos on source files
        uses: crate-ci/typos@85f62a8a84f939ae994ab3763f01a0296d61a7ee # v1.36.2

      - name: Check commit conventions
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: crate-ci/committed@15229711f8f597474c0b636f327cde5969f9a529 # v1.1.7

      - name: Lint Markdown files
        uses: dotanuki-labs/github-actions/quality/markdown@main

      - name: Check MIT license on source files
        uses: dotanuki-labs/github-actions/foss/check-licenses@main
        with:
          file-patterns: "*.rs,*.yml"
          license: "mit"

  docs-build-deploy:
    needs: docs-lint
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: warp-ubuntu-2404-x64-2x # ubuntu-24.04
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build and archive documentation assets
        uses: dotanuki-labs/github-actions/foss/prepare-ghpages@main

      - name: Deploy assets to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  rust-lint:
    runs-on: warp-ubuntu-2404-x64-4x # ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Inspect and lint source files
        run: cargo xtasks sources

  rust-tests:
    runs-on: warp-ubuntu-2404-x64-4x # ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust

      - name: Run project tests
        run: cargo xtasks tests
        env:
          GITHUB_TOKEN: ${{ secrets.DOTANUKI_BOT_TOKEN }}

  rust-build:
    needs: [rust-lint, rust-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-24.04, macos-15]
        os: [ warp-ubuntu-2404-x64-4x, warp-macos-15-arm64-6x ]

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust
        with:
          install-extra-tools: true

      - name: Generates build artifacts
        run: cargo xtasks artifacts binaries

      - name: Archive binaries
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: canopus-binaries-${{ runner.os }}
          path: artifacts

  rust-artifacts:
    needs: rust-build
    runs-on: warp-ubuntu-2404-x64-4x # ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Fetch executable from previous build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts

      - name: Setup CI
        uses: ./.github/actions/setup-rust

      - name: Generate additional artifacts
        run: cargo xtasks artifacts extras

      - name: Archive checksums
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: checksums.txt
          path: artifacts/checksums.txt

      - name: Archive SBOM
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sbom-${{ github.sha }}.json
          path: crates/canopus/canopus.cdx.json

  rust-security:
    needs: rust-build
    runs-on: warp-ubuntu-2404-x64-4x # ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check issues with supply chain
        run: cargo xtasks security

  docker-build:
    needs: rust-build
    runs-on: warp-ubuntu-2404-x64-4x # ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          driver-opts: |
            network=host

      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: false
          tags: "dotanuki-labs/canopus:latest"
          cache-from: type=gha,url=http://127.0.0.1:49160/,version=1
          cache-to: type=gha,url=http://127.0.0.1:49160/,mode=max,version=1

  compatibility-tests:
    needs: rust-build
    runs-on: warp-ubuntu-2404-x64-2x
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
        # os: [ ubuntu-22.04, macos-13 ]

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Fetch executable from previous build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts
          pattern: canopus-binaries-*

      - name: Compatibility check (macOS)
        if: ${{ runner.os == 'macOS'}}
        run: |
          chmod +x ./artifacts/canopus-binaries-macOS/canopus-x86_64-apple-darwin
          ./artifacts/canopus-binaries-macOS/canopus-x86_64-apple-darwin --help

      - name: Compatibility check (Linux)
        if: ${{ runner.os == 'Linux'}}
        run: |
          chmod +x ./artifacts/canopus-binaries-Linux/canopus-x86_64-unknown-linux-musl
          ./artifacts/canopus-binaries-Linux/canopus-x86_64-unknown-linux-musl --help

  all-checks:
    runs-on: warp-ubuntu-2404-x64-2x
    needs: [docs-lint, docker-build, rust-artifacts, rust-security, compatibility-tests]
    steps:
      - name: Report success
        run: echo "Great job âœ…"
