# Copyright 2025 Dotanuki Labs
# SPDX-License-Identifier: MIT

name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  docs-lint:
    runs-on: ubuntu-24.04
    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Check typos on source files
        uses: crate-ci/typos@65f69f021b736bdbe548ce72200500752d42b40e # v1.35.7

      - name: Check commit conventions
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: crate-ci/committed@15229711f8f597474c0b636f327cde5969f9a529 # v1.1.7

      - name: Lint Markdown files
        uses: dotanuki-labs/github-actions/quality/markdown@main

      - name: Check MIT license on source files
        uses: dotanuki-labs/github-actions/foss/check-licenses@main
        with:
          file-patterns: "*.rs,*.yml"
          license: "mit"

  docs-build:
    needs: docs-lint
    runs-on: ubuntu-24.04
    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build and archive documentation assets
        uses: dotanuki-labs/github-actions/foss/prepare-ghpages@main

  docker-build:
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build and run with Docker
        run: |
          docker build -t dotanuki-labs/canopus .
          docker run --rm -v "${PWD}/tmp" dotanuki-labs/canopus --help

  rust-lint:
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Inspect and lint source files
        run: cargo xtasks sources

  rust-tests:
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust
        with:
          install-extra-tools: true

      - name: Run project tests
        run: cargo xtasks tests

  rust-build:
    needs: [rust-lint, rust-tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-15 ]

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust
        with:
          install-extra-tools: true

      - name: Generates build artifacts
        run: cargo xtasks artifacts binaries

      - name: Archive binaries
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: canopus-binaries-${{ runner.os }}
          path: artifacts

  rust-artifacts:
    needs: rust-build
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Fetch executable from previous build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts

      - name: Setup CI
        uses: ./.github/actions/setup-rust

      - name: Generate additional artifacts
        run: cargo xtasks artifacts extras

      - name: Archive checksums
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: checksums.txt
          path: artifacts/checksums.txt

      - name: Archive SBOM
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sbom-${{ github.sha }}.json
          path: crates/canopus/canopus.cdx.json

  rust-security:
    needs: rust-build
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check issues with supply chain
        run: cargo xtasks security

  all-checks:
    runs-on: ubuntu-24.04
    needs: [docs-lint, docker-build, rust-artifacts, rust-security]
    steps:
      - name: Report success
        run: echo "Great job âœ…"
