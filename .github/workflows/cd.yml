# Copyright 2025 Dotanuki Labs
# SPDX-License-Identifier: MIT

name: CD

on: workflow_dispatch

permissions:
  id-token: write
  contents: read
  pages: write
  attestations: write
  packages: write

jobs:
  deploy-docs:
    runs-on: ubuntu-24.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout source
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Prepare documentation assets
        uses: dotanuki-labs/github-actions/foss/prepare-ghpages@main

      - name: Deploy assets to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-24.04", "macos-15"]

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust
        with:
          install-extra-tools: true

      - name: Generates build artifacts
        run: cargo xtasks artifacts binaries

      - name: Archive binaries
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: canopus-binaries-${{ runner.os }}
          path: artifacts

  artifacts:
    needs: build
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Fetch executable from previous build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts
          pattern: canopus-binaries-*

      - name: Setup CI
        uses: ./.github/actions/setup-rust

      - name: Generate additional artifacts
        run: cargo xtasks artifacts extras

      - name: Archive checksums
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: checksums.txt
          path: artifacts/checksums.txt

      - name: Archive SBOM
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sbom-${{ github.sha }}.json
          path: crates/canopus/canopus.cdx.json

  github-release:
    needs: artifacts
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Fetch executable from previous build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts
          pattern: canopus-binaries-*

      - name: Build provenance for binaries
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: artifacts/**/*

      - name: Prepare Github release
        id: prepare-release
        run: |
          version=$(grep 'version' Cargo.toml | head -1 | sed "s/version[[:space:]]=[[:space:]]//g" | tr -d '"')
          echo "version=$version" >>"$GITHUB_OUTPUT"

      - name: Publish draft release on Github
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          name: ${{ steps.prepare-release.outputs.version }}
          tag_name: ${{ steps.prepare-release.outputs.version }}
          token: ${{ secrets.DOTANUKI_BOT_TOKEN }}
          generate_release_notes: true
          draft: true
          files: |
            artifacts/**/*
            canopus.cdx.json

  publish-crate:
    needs: github-release
    runs-on: ubuntu-24.04

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup CI
        uses: ./.github/actions/setup-rust

      - name: Publish on crates.io
        run: cargo publish -p canopus --token ${{ secrets.CRATESIO_PUBLISH_TOKEN }}

  deploy-docker-images:
    runs-on: ${{ matrix.build-args.runner }}
    strategy:
      matrix:
        build-args:
          - platform: amd64
            runner: ubuntu-24.04
          - platform: arm64
            runner: ubuntu-24.04-arm

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Prepare Docker release
        id: prepare-release
        run: |
          version=$(grep 'version' Cargo.toml | head -1 | sed "s/version[[:space:]]=[[:space:]]//g" | tr -d '"')
          echo "version=$version" >>"$GITHUB_OUTPUT"

      - name: Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Set up docker-buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to Github Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container Image
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          provenance: false
          platforms: linux/${{ matrix.build-args.platform }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          annotations: ${{ steps.docker-metadata.outputs.annotations }}
          outputs: type=registry,push=true
          tags: ghcr.io/${{ github.repository }}:${{ steps.prepare-release.outputs.version }}-${{ matrix.build-args.platform }}

  deploy-docker-manifest:
    runs-on: ubuntu-24.04
    needs: deploy-docker-images

    steps:
      - name: Project Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Log in to Github Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Docker release
        id: prepare-release
        run: |
          version=$(grep 'version' Cargo.toml | head -1 | sed "s/version[[:space:]]=[[:space:]]//g" | tr -d '"')
          echo "version=$version" >>"$GITHUB_OUTPUT"

      - name: Create new Docker manifest
        shell: bash
        run: |
          docker manifest create ${{ env.latest }} --amend ${{ env.package }}-amd64 --amend ${{ env.package }}-arm64
          docker manifest annotate --arch amd64 --os linux "$latest" "$package"-amd64
          docker manifest annotate --arch arm64 --os linux "$latest" "$package"-arm64
          docker manifest inspect "$latest"
          docker manifest push "$latest"
        env:
          package: ghcr.io/${{ github.repository }}:${{ steps.prepare-release.outputs.version }}
          latest: ghcr.io/${{ github.repository }}:latest
